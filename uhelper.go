// Code generated by uniontool; DO NOT EDIT.

package stc

import "github.com/xdrpp/stc/stx"

// CreateAccount is a type with the same fields as stx.CreateAccountOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == CREATE_ACCOUNT and *Body.CreateAccountOp()
// initialized from the fields of the CreateAccount.
type CreateAccount stx.CreateAccountOp
func (arg CreateAccount) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.CREATE_ACCOUNT
	*ret.CreateAccountOp() = stx.CreateAccountOp(arg)
	return
}

// Payment is a type with the same fields as stx.PaymentOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == PAYMENT and *Body.PaymentOp()
// initialized from the fields of the Payment.
type Payment stx.PaymentOp
func (arg Payment) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.PAYMENT
	*ret.PaymentOp() = stx.PaymentOp(arg)
	return
}

// PathPaymentStrictReceive is a type with the same fields as stx.PathPaymentStrictReceiveOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == PATH_PAYMENT_STRICT_RECEIVE and *Body.PathPaymentStrictReceiveOp()
// initialized from the fields of the PathPaymentStrictReceive.
type PathPaymentStrictReceive stx.PathPaymentStrictReceiveOp
func (arg PathPaymentStrictReceive) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.PATH_PAYMENT_STRICT_RECEIVE
	*ret.PathPaymentStrictReceiveOp() = stx.PathPaymentStrictReceiveOp(arg)
	return
}

// ManageSellOffer is a type with the same fields as stx.ManageSellOfferOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == MANAGE_SELL_OFFER and *Body.ManageSellOfferOp()
// initialized from the fields of the ManageSellOffer.
type ManageSellOffer stx.ManageSellOfferOp
func (arg ManageSellOffer) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.MANAGE_SELL_OFFER
	*ret.ManageSellOfferOp() = stx.ManageSellOfferOp(arg)
	return
}

// CreatePassiveSellOffer is a type with the same fields as stx.CreatePassiveSellOfferOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == CREATE_PASSIVE_SELL_OFFER and *Body.CreatePassiveSellOfferOp()
// initialized from the fields of the CreatePassiveSellOffer.
type CreatePassiveSellOffer stx.CreatePassiveSellOfferOp
func (arg CreatePassiveSellOffer) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.CREATE_PASSIVE_SELL_OFFER
	*ret.CreatePassiveSellOfferOp() = stx.CreatePassiveSellOfferOp(arg)
	return
}

// SetOptions is a type with the same fields as stx.SetOptionsOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == SET_OPTIONS and *Body.SetOptionsOp()
// initialized from the fields of the SetOptions.
type SetOptions stx.SetOptionsOp
func (arg SetOptions) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.SET_OPTIONS
	*ret.SetOptionsOp() = stx.SetOptionsOp(arg)
	return
}

// ChangeTrust is a type with the same fields as stx.ChangeTrustOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == CHANGE_TRUST and *Body.ChangeTrustOp()
// initialized from the fields of the ChangeTrust.
type ChangeTrust stx.ChangeTrustOp
func (arg ChangeTrust) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.CHANGE_TRUST
	*ret.ChangeTrustOp() = stx.ChangeTrustOp(arg)
	return
}

// AllowTrust is a type with the same fields as stx.AllowTrustOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == ALLOW_TRUST and *Body.AllowTrustOp()
// initialized from the fields of the AllowTrust.
type AllowTrust stx.AllowTrustOp
func (arg AllowTrust) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.ALLOW_TRUST
	*ret.AllowTrustOp() = stx.AllowTrustOp(arg)
	return
}

// AccountMerge is a type with the same fields as stx.MuxedAccount that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == ACCOUNT_MERGE and *Body.Destination()
// initialized from the fields of the AccountMerge.
type AccountMerge stx.MuxedAccount
func (arg AccountMerge) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.ACCOUNT_MERGE
	*ret.Destination() = stx.MuxedAccount(arg)
	return
}

// Inflation is an empty type that can be passed to
// TransactionEnvelope.Append() to append a new Operation
// with Body.Type == INFLATION.
type Inflation struct{}
func (Inflation) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.INFLATION
	return
}

// ManageData is a type with the same fields as stx.ManageDataOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == MANAGE_DATA and *Body.ManageDataOp()
// initialized from the fields of the ManageData.
type ManageData stx.ManageDataOp
func (arg ManageData) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.MANAGE_DATA
	*ret.ManageDataOp() = stx.ManageDataOp(arg)
	return
}

// BumpSequence is a type with the same fields as stx.BumpSequenceOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == BUMP_SEQUENCE and *Body.BumpSequenceOp()
// initialized from the fields of the BumpSequence.
type BumpSequence stx.BumpSequenceOp
func (arg BumpSequence) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.BUMP_SEQUENCE
	*ret.BumpSequenceOp() = stx.BumpSequenceOp(arg)
	return
}

// ManageBuyOffer is a type with the same fields as stx.ManageBuyOfferOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == MANAGE_BUY_OFFER and *Body.ManageBuyOfferOp()
// initialized from the fields of the ManageBuyOffer.
type ManageBuyOffer stx.ManageBuyOfferOp
func (arg ManageBuyOffer) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.MANAGE_BUY_OFFER
	*ret.ManageBuyOfferOp() = stx.ManageBuyOfferOp(arg)
	return
}

// PathPaymentStrictSend is a type with the same fields as stx.PathPaymentStrictSendOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == PATH_PAYMENT_STRICT_SEND and *Body.PathPaymentStrictSendOp()
// initialized from the fields of the PathPaymentStrictSend.
type PathPaymentStrictSend stx.PathPaymentStrictSendOp
func (arg PathPaymentStrictSend) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.PATH_PAYMENT_STRICT_SEND
	*ret.PathPaymentStrictSendOp() = stx.PathPaymentStrictSendOp(arg)
	return
}

// CreateClaimableBalance is a type with the same fields as stx.CreateClaimableBalanceOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == CREATE_CLAIMABLE_BALANCE and *Body.CreateClaimableBalanceOp()
// initialized from the fields of the CreateClaimableBalance.
type CreateClaimableBalance stx.CreateClaimableBalanceOp
func (arg CreateClaimableBalance) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.CREATE_CLAIMABLE_BALANCE
	*ret.CreateClaimableBalanceOp() = stx.CreateClaimableBalanceOp(arg)
	return
}

// ClaimClaimableBalance is a type with the same fields as stx.ClaimClaimableBalanceOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == CLAIM_CLAIMABLE_BALANCE and *Body.ClaimClaimableBalanceOp()
// initialized from the fields of the ClaimClaimableBalance.
type ClaimClaimableBalance stx.ClaimClaimableBalanceOp
func (arg ClaimClaimableBalance) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.CLAIM_CLAIMABLE_BALANCE
	*ret.ClaimClaimableBalanceOp() = stx.ClaimClaimableBalanceOp(arg)
	return
}

// BeginSponsoringFutureReserves is a type with the same fields as stx.BeginSponsoringFutureReservesOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == BEGIN_SPONSORING_FUTURE_RESERVES and *Body.BeginSponsoringFutureReservesOp()
// initialized from the fields of the BeginSponsoringFutureReserves.
type BeginSponsoringFutureReserves stx.BeginSponsoringFutureReservesOp
func (arg BeginSponsoringFutureReserves) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.BEGIN_SPONSORING_FUTURE_RESERVES
	*ret.BeginSponsoringFutureReservesOp() = stx.BeginSponsoringFutureReservesOp(arg)
	return
}

// EndSponsoringFutureReserves is an empty type that can be passed to
// TransactionEnvelope.Append() to append a new Operation
// with Body.Type == END_SPONSORING_FUTURE_RESERVES.
type EndSponsoringFutureReserves struct{}
func (EndSponsoringFutureReserves) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.END_SPONSORING_FUTURE_RESERVES
	return
}

// RevokeSponsorship is a type with the same fields as stx.RevokeSponsorshipOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == REVOKE_SPONSORSHIP and *Body.RevokeSponsorshipOp()
// initialized from the fields of the RevokeSponsorship.
type RevokeSponsorship stx.RevokeSponsorshipOp
func (arg RevokeSponsorship) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.REVOKE_SPONSORSHIP
	*ret.RevokeSponsorshipOp() = stx.RevokeSponsorshipOp(arg)
	return
}

// Clawback is a type with the same fields as stx.ClawbackOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == CLAWBACK and *Body.ClawbackOp()
// initialized from the fields of the Clawback.
type Clawback stx.ClawbackOp
func (arg Clawback) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.CLAWBACK
	*ret.ClawbackOp() = stx.ClawbackOp(arg)
	return
}

// ClawbackClaimableBalance is a type with the same fields as stx.ClawbackClaimableBalanceOp that
// can be passed to TransactionEnvelope.Append() to append a new
// operation with Body.Type == CLAWBACK_CLAIMABLE_BALANCE and *Body.ClawbackClaimableBalanceOp()
// initialized from the fields of the ClawbackClaimableBalance.
type ClawbackClaimableBalance stx.ClawbackClaimableBalanceOp
func (arg ClawbackClaimableBalance) To_Operation_Body() (ret stx.XdrAnon_Operation_Body) {
	ret.Type = stx.CLAWBACK_CLAIMABLE_BALANCE
	*ret.ClawbackClaimableBalanceOp() = stx.ClawbackClaimableBalanceOp(arg)
	return
}

// Helper function for initializing a Memo with
// Type == MEMO_NONE
func MemoNone() stx.Memo {
	return stx.Memo {
		Type: stx.MEMO_NONE,
	}
}

// Helper function for initializing a Memo with
// Type == MEMO_TEXT
func MemoText(arg string) (ret stx.Memo) {
	ret.Type = stx.MEMO_TEXT
	*ret.Text() = arg
	return
}

// Helper function for initializing a Memo with
// Type == MEMO_ID
func MemoId(arg uint64) (ret stx.Memo) {
	ret.Type = stx.MEMO_ID
	*ret.Id() = arg
	return
}

// Helper function for initializing a Memo with
// Type == MEMO_HASH
func MemoHash(arg [32]uint8) (ret stx.Memo) {
	ret.Type = stx.MEMO_HASH
	*ret.Hash() = arg
	return
}

// Helper function for initializing a Memo with
// Type == MEMO_RETURN
func MemoReturn(arg [32]uint8) (ret stx.Memo) {
	ret.Type = stx.MEMO_RETURN
	*ret.RetHash() = arg
	return
}

